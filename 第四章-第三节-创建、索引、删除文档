	创建、索引、删除操作都属于写操作，这些操作必须在数据分发到关联的复制分片之前成功的写入到基本分片中。
	接下来将要说明一次成功的创建、删除、索引一个文档到基本分片和复制分片需要经过哪些步骤：
	1：客户端发出一个写请求到节点；
	2：节点（协作节点）通过文档的id算出的哈希值来获得文档所在的分片位置，然后此节点将请求转发给拥有文档的基本分片所在的那个节点。
	3：（目标）节点在基本分片上执行请求。如果成功的话，它将请求平行的转发给其它节点，当所有的复制分片返回操作成功的时候，此节点返回成功状态给协作节点，然后协作节点返回成功状态给客户端。
	这个时候客户端会接收到一个状态为成功的响应，这个文档的变更已经在基本分片和相关的复制分片上被执行了，属于安全操作。
	你可以通过几个可选参数来影响这个进程，有可能可以降低因为数据安全方面造成的性能损失。这些参数很少被使用，因为Elasticsearch已经很快了，不过还是在这里解释一下：
	consistency：
	默认情况下，基本分片需要指定复制分片的数量，这样才能使写入操作可用。这样的设定是为了防止因为网络分配导致将数据写入到错误的位置。法定数量的定义如下：
	int( (primary + number_of_replicas) / 2 ) + 1
	consistency可以设置的值有one（只有基本分片），all(基本分片和所有的复制分片),quorum(默认),或者是分片的数量。
	须知number_of_replicas是在索引设置里制定的复制分片的数量，而不是当前存活的分片的数量。如果你指定了一个索引中要有3个复制分片的话，法定数量如下：
	int( (primary + 3 replicas) / 2 ) + 1 = 3
	但如果你只启动了2个节点的话，就无法满足法定数量规定的分片数，这样就无法索引或者删除文档了。
	timeout:
	当可用的分片拷贝不足的时候会发生什么呢？
	Elasticsearch会等待，希望更多的分片出现。默认情况下，它会等待1分钟，如果你有需求的话，可以使用timeout参数来缩短时间。比如100表示100毫秒，30s表示30秒。
	一个新的索引默认情况下有一个拷贝，也就是说为了满足法定数量的话，要有2个可用的分片拷贝。但是，这些默认设置将会防止我们在单节点的集群中做任何事情。为了避免这个问题，法定数量的需求只有在number_of_replicas大于1的时候才会被强制执行。
	
