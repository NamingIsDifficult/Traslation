	第一步是要先存储雇员的数据。这将会以雇员文档的形式表现出来：一个文档表示一个雇员。在Elasticsearch中存储数据的行为叫做索引，不过，在我
	
们索引一个文档之前，我们需要先决定在哪里存储它。

	在Elasticsearch中，一个文档属于一个类型（type）,这些类型存活在一个索引(index)中。与关系型数据库的定义相对应的情况如下：
	
	Relational DB  ⇒ Databases ⇒ Tables ⇒ Rows      ⇒ Columns
	Elasticsearch  ⇒ Indices   ⇒ Types  ⇒ Documents ⇒ Fields
	
	一个Ealsticsearch集群可以包含许多的索引，索引中包含许多的类型，类型中又包含许多的文档，文档中包含许多的域。
	
	索引一词在本书中有三种含义：
	
	作为名词：之前所解释的，一个索引就像是一个传统关联型数据库中的数据库，是存放关联文档的地方。其复数形式为indices 或 indexes。
	
	作为动词：索引一个文档就是说将一个文档存储到一个索引（名词）中，这样就可以获取和搜索这个文档了。它和SQL中的INSERT很像，如果原文档已经
	
存在的话，新文档将会替换掉旧的。

	倒排索引：关系型数据库中添加一个索引，比如说B树索引，意在提升获取数据的速度。Elasticsearch和Lucene使用倒排索引来完成类似的目的。
	
	默认情况下，文档中的每一个域都会被索引（拥有一个倒排索引），一个没有倒排索引的域是不可搜索的，后面的章节会详细讨论它。
	
	为了制作前文所说的雇员目录，我们将要做以下几件事：
	
	1.为每个雇员都索引一个文档，其中包含该雇员所有的信息。
	
	2.每个文档都将会属于employee这个类型
	
	3.该类型将会存放在magacorp索引中
	
	4.该索引将会存留在Elasticsearch集群中
	
	在实际运用中，这非常的简单（虽然看起来有好几步）。我们可以通过一条命令来完成所有的操作：
	
	PUT /megacorp/employee/1
	{
	    "first_name" : "John",
	    "last_name" :  "Smith",
	    "age" :        25,
	    "about" :      "I love to go rock climbing",
	    "interests": [ "sports", "music" ]
	}
	
	需要注意的是 /megacorp/employee/1 这个路径包含了3段信息：
	
	megacorp：索引名词
	
	employee：类型名词
	
	1：特定雇员的Id
	
	请求主体，即其中的JSON文档，包含了这个雇员所有的信息。
	
	很简单吧！不需要预先做任何管理员式的任务，比如创建一个索引，或者指定每个域中数据的类型。我们可以直接索引一个文档。Elasticsearch

为所有的设置都设定了默认值，所有必要的管理任务都在后台做掉了，如果你不特别的修改它，就会使用默认值。

	
