	不使用fsync来讲文件系统缓存里的数据冲刷到硬盘中的话，我们并不能保证数据在掉电甚至是应用退出的时候不会丢失。为了使Elasticsearch的可用性，它需要保证将变更持久化到硬盘中
	前文提及到一次完整的提交将分段冲刷到硬盘并且写入一个提交点，其中列出了所有的分段。Elasticsearch在开启或重新打开一个索引时使用提交点来分辨哪些分段属于当前分片。
	当使用每秒一次刷新来达成近似实时搜索的功能的时候，依旧要按照规律做完整的提交来保证当异常发生的时候可以恢复。那么，在提交的时候发生的文档变更是怎么处理的呢？
	Elasticsearch添加一个translog，即事务日志，其中记录了Elasticsearch中发生的每个操作。通过事务日志，进程如下：
	1.当一个文档被索引的时候，它被添加到内存中的缓冲区然后再添加到事务日志中。
	2.刷新的时候缓冲区被清空，但是事务日志没有被清空，每秒分片都会被刷新：
		2.1 内存缓冲区中的文档被写入到新的分段中，并且不会执行fsync
		2.2 分段是被打开的，这样才能被搜索可见
		2.3 内存缓冲区被清空
	3.越来越多的文档添加进来，重复1-2
	4.每当事务日志变得过大的时候，索引就会被冲刷到硬盘，然后一个新的事务日志会被创建，并且执行一次完整的提交。
		4.1 任意在内存缓冲区中的文档被写入到新的分段中
		4.2 缓冲区被清空
		4.3 一个提交点被写入到硬盘
		4.4 文件系统缓存通过fsync冲刷至硬盘
		4.5 旧的事务日志被删除
	
