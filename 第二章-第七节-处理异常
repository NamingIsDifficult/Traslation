	之前提到了Elasticsearch可以在节点失效的时候保证不丢失数据，那现在就来验证一下。假设先杀死一个节点，那么集群就会是这样的：
	Cluster:				Node2-*master				Node3
							R0	R1	R2					P0	P1	R2
	杀死的是主节点。集群必须有一个主节点来保证功能的正确实施，所以第一件事要做的就是选举出一个新的主节点：Node2
	基本分片1和2在杀死节点1的时候丢失了，而索引在丢失基本分片后市不能正确运转的，如果此时检查集群的健康状态，那一定是red：部分基本分片不是活跃的。
	幸运的是，这两个基本分片在其他节点上都有完全相同的拷贝，所以新的主节点做的第一件事就是将节点2和节点3上的相应的复制分片提升为基本分片，这使得集群的简况状况又变回yellow。这个提升的过程是立刻发生的，就像按下一个开关。
	那么，为什么集群的状态时yellow而不是green呢?我们有3个基本分片，因为之前有指定说每个基本分片都有两个复制分片，而现在只有1个，所以状态时yellow，不过不用担心，即使再把节点2也杀掉，应用依旧可以保持正常运转且不丢失数据，因为节点3上包含基本分片的所有拷贝。
	现在如果重启节点1，集群就会重新分配之前丢失的复制分片，集群状态就会回归到起初的样子，如果节点1上还有之前的数据，那么应用会尝试着重用它们，只有基本分片的数据在这个时间点有了变化才会重新复制。
	现在，你应该对分片是如何让Elasticsearch具备横向扩展并保证数据安全的能力，有了比较清晰的概念。稍后我们会从更细微的方面测试分片的生命周期。
