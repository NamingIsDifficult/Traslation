	基本上所有的查询都会计算关联度，但并不是每个查询都有一个分析阶段。另外，某些特定的查询，比如布尔或者function_score查询，这种不会在文本上做操作的查询。文本查询可以被分为以下两种：
	1.基于短语的查询
	短语(term)或者模糊(fuzzy)查询是底层的查询，其中并不包含分析阶段。它们作用于单个短语上。一个短语查询在查询短语Foo时，就在反向索引中查找完全一致的短语，并且对包含此短语的文档通过短语频率/文档频率计算关联分数_score。
	其中很重要的一点是短语查询是在反向索引中查找完全一致的短语；它不会匹配任何其它的形式，比如foo或者FOO，不管这个短语在索引中是以何种样式表现的，它需要的是完全匹配。如果你要把["Foo","Bar"]索引到一个not_analyzed的字段上去，或者将Foo Bar通过一个空格分析器进行索引的话，它们的结果都是在反向索引中产生两个短语Foo和Bar。
	2.全文本查询
	match或者query_string这种查询是高层的查询，它们是基于字段的映射表工作的：
		2.1 如果你通过它们来查询日期或者短整型字段的话，它们会将查询字串分别当作是日期或者短整型。
		2.2 对一个精确值（not_analyzed）字串字段，它们会将整个查询字串当作是一个单独的短语。
		2.3 但是对于一个全文本字段，它们首先会把查询字串传给合适的分析器来创建一组用于查询的短语
	一旦查询封装好了一组短语的话，它对每个短语执行合适的底层查询，然后把结果整合，并为每个文档生成最终的关联分。
	你很少会需要直接使用基于短语的查询。通常情况下你会想要使用全文本来查询，而不是单独的短语，这通过高层的全文本查询很容易达成，它们最终还是通过基于短语的查询完成的。
	基于短语的查询相较全文本查询的好处是它可以被缓存，所以相应会有性能上的优势。
