	update API中包含了读和写，它的执行步骤如下：
	1:客户端向协作节点发送请求
	2：协作节点将请求转发给文档所在的基本分片所在的节点
	3：目标节点获取文档，然后将_source字段的值修改，然后再基本分片上尝试重新索引文档。如果文档被另一个进程修改了，它将按retru_on_confilict参数配置的次数重试步骤3.
	4：如果目标节点更新文档成功的话，它将文档的新版本平行的转发到复制分片所在节点，并重新索引。当所有的复制分片都返回成功的时候，目标节点向协作节点返回成功状态，协作节点再返回给客户端。
	update API也接受routing,replication,consistency,timeout等参数。
	基于文档的复制策略：
	当一个基本分片转发变更给它的复制分片的时候，它并不是转发更新请求，而是转发新版本的文档整体。注意这些变更是异步转发给复制分片的，所以不能保证它们抵达的时候是金额发送顺序一致的。如果Elasticsearch只是转发变更，有可能会导致变更以错误的顺序被执行，导致文档不可用。
