	一个文档不单单保存了它本身的数据，它还包含元数据，元数据是描述这个文档的信息。3种必需的元数据元素是这些：
	_index:文档所在的索引
	_type:文档所代表的对象的类。
	_id:文档的唯一标识符
	
	_index
	
	一个索引就像是关系型数据库里的数据库，它是存放和索引关联文档的地方。
	小贴士：事实上，在Elasticsearch中，数据在分片中存储和索引，一个索引则是将一个或更多分片组织在同一逻辑命名空间的分组中。但是，这是内部的特性，使用者根本不应该以分片的角度来考虑。对于使用者来说，文档就是存在于索引中的。Elasticsearch将会处理更加底层的细节。
	在索引管理一节中将会讲解如何创建和管理索引，不过现在的话，还是让Elasticsearch代劳吧。只需要选择一个索引名称就好了，这个名称必须是小写的，而且不能用下划线开始，其中不能有逗号，先用website这个名字测试一下吧。
	
	_type
	
	在应用程序中，我们使用对象来表示诸如用户、博客、评论或是电邮之类的实体。每一个对象都属于一个类，这个类定义了和对象关联的属性或是数据。user类的对象可能包含了名字、性别、年龄、邮件地址等。
	在关系型数据库中，我们通常在同一张表理存储同类型的对象，因为它们使用了相同的数据结构。同样的道理，在Elasticsearch离也使用类型的概念来代表可以表示相同类型的东西的文档。
	每一个类型都有自己的属性映射关系或者模式定义，它们定义了这个类型的文档的数据结构，和数据库表的列的概念很像。相同类型的文档可以被存储到相同的索引中，但是映射关系则会让Elasticsearch对文档的数据使用相应的索引方式。
	在类型和映射一节中将会详细介绍怎么指定和管理映射，现在也依旧让Elasticsearch自动检查和设置吧。
	_type的名字可以是小写的或是大些的，但是不能用下划线开头，也不能有逗号。先用blog这个名字测试一下。
	
	_id
	
	ID是一个字串，当和_index与_type结合在一起的时候，可以在Elasticsearch里面唯一标识一个文档。当创建一个新文档的时候，你可以自己提供一个_id，也可以让Elasticsearch自动生成一个。
	
	其它元数据
	
	还有几种元数据将会在类型与映射中介绍。再加上上面列出的几个元素，我们就可以在Elasticsearch中保存文档并通过ID来获取它。也就是说，先将Elasticsearch当作文档存储的地方。
	
