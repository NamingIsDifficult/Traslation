	影响用户选择度假房的因素可能会有很多，或许她想要离市中心近的，或者是稍远一些但是价钱足够低的，或者反过来她想要更好的位置并且不在乎价钱。如果我们添加了一个把距离超过1公里的度假房或者超过100磅每晚的都排除掉了，那么就有可能把用户认为可以接受的妥协项排除掉了。
	function_score查询给出了在多种可选项之间做平衡的能力，它提供了一组称为衰减函数的方程，包含三个方法，linear,exp,gauss，只对数字字段，日期字段或者坐标有效，它们接收相同的参数：
	origin
	均值，或者该字段出现概率最大的值，落在此区间的文档将会获得最高分1.0
	scale
	数据采集步长，即得分在落点远离中心时的数据采集步长
	decay
	按照步长计算的衰减比率,默认是0.5
	offset
	设置偏移量可以使得中心点不再是一个点，而是一个区间。[offset-origin,offset+origin]区间内的店得分都是1.0
	这三个方程式区别只在于滤波器的形状不同（主要是边缘的衰减特性），
	1.linear的衰减是线性的
	2.exp(指数级)的衰减在开始阶段极快
	3.gauss高斯滤波器是钟形的
	与例子相结合，用户可能会倾向于租住离伦敦中心近并且不超过100磅每晚的度假房，但是用户认为价钱比起距离更为重要，那么查询如下：
	GET /_search
	{
	  "query": {
	    "function_score": {
	      "functions": [
	        {
	          "gauss": {
	            "location": { //该字段被映射为geo_point类型
	              "origin": { "lat": 51.5, "lon": 0.12 },
	              "offset": "2km",
	              "scale":  "3km"
	            }
	          }
	        },
	        {
	          "gauss": {
	            "price": { 
	              "origin": "50", 
	              "offset": "50",
	              "scale":  "20"
	            }
	          },
	          "weight": 2 //price字段的权重要比location高
	        }
	      ]
	    }
	  }
	}
	
