	虽然临近词查询很有用，但是它要求所有的短语都出现，这样的规定就有点太严格了。如果有6/7的短语匹配，那么这个文档应该足够展示给用户看了，但是如果使用match_phrase的话，那它就会被排除掉。
	为了避免这个问题，可以把临近词匹配当作是多个查询中的一个信号，它是否匹配将会对最终的得分产生影响，这和多字段查询类似。事实上，如果我们需要把多个查询的得分加总的话，需要使用布尔查询来整合它们。这里可以使用一个简单的match查询来作为must子句，这将会决定什么样的文档会被包含进来。然后使用minimum_should_match参数来筛选掉尾部的关联度低的文档。然后添加一个更加针对的查询作为should子句。匹配这个子句的文档将会提高关联度：
	
	GET /my_index/my_type/_search
	{
	  "query": {
	    "bool": {
	      "must": {
	        "match": { 
	          "title": {
	            "query":                "quick brown fox",
	            "minimum_should_match": "30%"
	          }
	        }
	      },
	      "should": {
	        "match_phrase": { 
	          "title": {
	            "query": "quick brown fox",
	            "slop":  50
	          }
	        }
	      }
	    }
	  }
	}
	当然也可以把其它的查询子句放到should区块中，这里的每个子句都将对最终的得分产生影响。
