	Elasticsearch使用Lucene的实用打分方程作为默认的相似度算法，它还支持其它可用的算法，在https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-similarity.html#configuration中详细列出。
	Okapi BM25
	TF/IDF算法和向量空间模型的一个最为有趣的竞争对手是Okapi BM25，被视为一种展示了技术发展水平的排名算法。BM25源于概率性关联模型，，而不是向量空间模型，不过这个算法和Lucene的使用打分方程有很多相同的地方。他们都是用短语频率，反向文档频率和字段长度规范化，不过这些计算的定义略有不同，对此我们不会花太多的精力来解释BM25的方程式的细枝末节，而是关注于BM25实际上提供的好处。
	短语频率饱和度：
	TF/IDF和BM25都是用反向文档频率来区分普通词语和不常见的词语，而且都认为越普通的词得分越低。普通的词往往在所有文档中都会多次出现，这将会使得多次出现的短语权重降低。但是，TF/IDF是被设计为在实际应用中移除最为普通的词，比如语气词。这个算法不需要考虑短语频率的上限，因为出现频率最高的短语已经被移除了。
	在Elasticsearch中，string字段的默认的分析器是standard分析器，它不会移除语气词，即使这些词的得分权重极低，结果就是，对于the,and之类的词在很长的文档中，由于出现的次数很多，可以人为的提升其权重。
	BM25则有上限，如果短语在文档中出现了5-10次，那么它对关联分的影响比起只出现1，2次的文档要高得多，不过词频的绝对值超出一定值后，就基本没什么影响了。
	字段长度规范化:
	一个短语在字段中的频率会受到字段长度的影响，但那时，实用打分方程式对所有的字段都执行相同的处理，它会认为所有的title字段的权重都比body要大。
	BM25也认为短的字段比长的字段权重更高，但是它通过把字段的平均长度加入到计算中来分别考量每个字段。它可以区分长的title字段和短的title字段。
	前文曾经提及title字段相对body字段有一个天然的权重提升，这个自然的提升在BM25中则消失了，因为在BM25中，字段长度仅在同一字段中进行比对。
	调整BM25:
	BM25与TF/IDF相比有一个很好的特性，它接受两个参数来使得过程可调：
	k1
		这个参数用于控制短语频率的增速如何影响词频饱和度的增速。默认值是1.2.越低意味着饱和速度越快
	b
		这个参数用于控制字段长度规范化产生的影响大小。值为0.0意味着禁用，1.0意味着完全规范化，默认是0.75.
	BM25的调制的实用性暂且不提，默认的k1和b对于大多数的文档集合应该都是合适的，但是最佳的值完全取决于文档集本身，而这需要实际的去调整和查看。
	
