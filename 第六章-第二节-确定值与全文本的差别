	Elasticsearch中的数据大致上可以分为两种：确定值和全文本。
	确定值就是指数据真实的样子。比如说日期或者用户ID，也包含确定的字符串，比如说用户名或是电邮地址。确定值Foo和确定值foo是不一样的。
	全文本，从另一个角度来说，也就是文本数据，通常使用人类语言来描述的，比如说一个tweet的文本，或是电邮的主体。
	全文本通常被解释为非结构化数据，这其实是用词不当的，自然语言是高度结构化的。问题在于自然语言的规则是很复杂的，这导致要将他们正确的解析出来是很困难的。举个例子，考察一下这个句子：
	May is fun but June bores me.
	它到底指的是月份还是人呢？
	确定值很容易查询。结果是只有两种情况：一个值要么和查询匹配，要么不匹配。这种查询很容易使用SQL来表示：
	WHERE name    = "John Smith"
	  AND user_id = 2
	  AND date    > "2014-09-15"
	查询全文本数据就要微妙的多了。这可不仅仅是问：这个文档和查询匹配吗？而是问：这个文档和查询的匹配程度是多少？换句话说，这个文档与给定的查询的关联程度是多少？
	我们很少希望精确的匹配整个全文本。事实上，我们更想在一定的文本字段范围内搜索。不但如此，我们还预期搜索引擎可以理解我们的意图：
	一个搜索UK的查询应该也返回提到了United Kingdom的文档
	一个搜索jump的查询需要匹配jumped,jumps,jumping,或者甚至是leap。
	johnny walker需要匹配到Johnnie Walker，johnnie depp需要匹配Johnny Depp.
	fox news hunting 需要返回在Fox News上关于打猎的故事，而fox hunting news需要返回描述捕猎狐狸的新故事。
	为了是在全文本上进行此类查询更加的容易，Elasticsearch首先先分析文本，然后使用分析结果建立一个反向索引。接下来会再详细讨论它们。
	
