	当索引一个文档的时候，它是被存储在一个基本分片里的。Elasticsearch怎么知道文档在哪一个分片呢？当创建一个新文档的时候，它怎么知道要存在分片1还是分片2呢？
	这个过程不可能是随机的，因为以后还要获取这个文档。事实上，它是由一个简单的公式决定的：
	shard=hash(routing)%number_of_primary_shards
	公式中的routing值是一个任意的字串，默认是文档的_id，不过也可以自定义值。routing字串通过一个哈希方法生成一个数字，然后再除以索引中基本分片的数量然后求余，余数总会小于分片的数量，并且告诉我们这个文档在哪个分片里。
	这就解释了为什么基本分片的数量只能在索引被创建的时候设置，并且不能在被修改：如果基本分片的数量在未来修改了的话，之前路由的值就都会失效，文档就找不到了。
	用户有的时候会认为如果基本分片的数量固定的话，就很难横向扩展了，在实际应用中，有可以使你轻松扩展的技术，在 为了扩展而设计 一节中会详细介绍。
	所有的文档API（get,index,delete,bulk,update,mget）都接受一个routing参数，这个参数会被用于自定义文档与分片的匹配关系。一个自定义的路由值可以被用来保证所有关联的文档都被存储在同一个分片中，比如用户相同的文档。
