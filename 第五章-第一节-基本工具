	到现在为止，我们已经学习了如何将Elasticsearch当作一个简单的NoSQL型的分布式文档存储工具。我们可以将JSON格式的文档扔到Elasticsearch中，然后通过ID来获取它们。但是Elasticsearch真正的作用在于它可以在混乱中找到有价值的东西-把大数据变成可用的信息。
	这就是为什么我们要是用jSON结构的文档而不是使用无规则的数据。Elasticsearch不单单是存储了数据，还将文档中的文案都做了索引使之可以被搜索。
	文档中的每个字段都被索引了并且可以被查询。在一个查询中，Elasticsearch可以使用所有的索引，并且在呼吸间将结果返回。这在传统的关系型数据库中几乎不可想象。
	一次搜索可以是以下这些情形：
	一个在具体字段上的结构化查询，比如性别或者年龄，按照指定字段排序，和使用SQL查询类似。
	一个全文搜索查询，找出所有匹配关键词的文档，然后将它们按照关联程度排序后返回。
	以上两种组合查询
	许多搜索情况默认情况下不做特殊配置都是可以通过Elasticsearch直接使用的，而为了使Elasticsearch发挥它全部的能力的话，你需要理解这3个概念：
	映射：
	数据在每个字段中是如何被解释的
	分析：
	全文搜索功能使得文档可搜索是怎样达成的。
	结构化查询：
	Elasticsearch使用的方便又强大的查询语言。
	每一条都是一个不小的关注点，在接下来的章节会详细介绍它们。本节只介绍基本概念。
	先从解释search API最简单的格式开始。
	
