	一个应用中的对象很少是只包含键值对的，他们通常是包含有复杂的数据结构的，其中可能有日期，坐标，其它对象或者数组。
	
	你迟早需要将这些对象存储到数据库中。在关系型数据库中，这意味着要将你原本具备丰富表现能力的对象压缩为一张张由行和列组成的关系表：你不
	
得不将对象扁平化以适应相应的表结构，通常一个列代表了一个域，你每次要获取这个对象的时候都必须重新组装它。

	Elasticsearch是文档导向的，也就是说它会存储整个对象或者文档，并且还会对其做索引，这样就可以搜索它们了。在Elasticsearch中，你做索引，
	
搜索、分类和筛选文档，而不是一行行的数据字段。这是一种从根本上就不一样的数据分析的方式，也是Elasticsearch可以达成复杂的全文搜索功能的一个

原因。
	
	JSON
	
	Elasticsearch使用JavaScript对象的标记，或是JSON,作为文档对象序列化的模板。JSON序列化被大多数的编程语言所支持，而且随着NoSQL的演变
	
,它也发展为NoSQL的基本模板。他很简单、准确，而且易于阅读。

	以下是用JSON格式展示的一个用户对象：
	
	{
	    "email":      "john@smith.com",
	    "first_name": "John",
	    "last_name":  "Smith",
	    "info": {
	        "bio":         "Eco-warrior and defender of the weak",
	        "age":         25,
	        "interests": [ "dolphins", "whales" ]
	    },
	    "join_date": "2014/05/01"
	}
	
	尽管原始的用户对象很复杂，此对象的结构和含义都保留在序列化后的JSON中。对于Elasticsearch来说，将一个JSON对象进行索引，要比对同等的
	
扁平型表结构简单的多。

	小贴士：几乎所有的编程语言都拥有把各种数据结构或者对象转换成JSON的模块，不过有一些细节上的不同。官方提供的Elasticsearch客户端自动
	
为你进行JSON的序列化和反序列化。

	
