	映射表最上层被称作是根对象。它包含以下内容：
	1.一个属性区块 properties，其中列出了文档中包含的每个字段的映射表
	2.多个元数据字段，以_开头，比如_type,_id,_source
	3.设置项，用于配置新字段的动态检测要如何处理，比如analyzer,dynamic_date_formats,dynamic_templates
	4.其它设置项，这些设置可以应用于跟对象和类型为object的字段，这些设置项有 enabled,dynamic,include_in_all
	
	我们已经讨论过了对于文档字段或属性最为重要的3个设置，即：
	1.type
	字段的数据类型，比如string
	2.index
	字段是按照全文本搜索(analyzed)还是按照精确值搜索(not_analyzed)或是不能被搜索(no)
	3.analyzer
	全文本字段是使用哪个分析器分析的，这个设置在搜索和索引的时候被使用
	其它字段类型，比如ip,geo_point,gei_shape在后续章节中会再介绍
	默认情况下，Elasticsearch在_source字段中使用JSON格式来展示文档主体。和其它的存储字段一样，_source字段在写到硬盘之前都会经过压缩。
	这个字段在绝大多数情况下都是需要的，原因如下：
	1.整个文档在搜索结果中直接可用，不用再来回的从其它数据存储地区获取文档，减少了请求往返传递的消耗。
	2.部分更新请求在没有_source字段的时候是不能运作的。
	3.当你的映射表有变化并且需要重新索引的时候，你可以直接在Elasticsearch中操作，而不是从其它数据存储地获取所有的文档。
	4.特定的字段可以从_source字段中获取，这样就不用去看整个文档了。
	5.对查询进行查错更为简单，因为你可以看到每个文档实际包含哪些东西，而不需要去从一列id中去猜测它们包含哪些内容。
	不过存储_source字段确实是会消耗硬盘空间的。如果这几个理由对你来说都不重要的话，你可以关闭_source字段：
	PUT /my_index
	{
	    "mappings": {
	        "my_type": {
	            "_source": {
	                "enabled":  false
	            }
	        }
	    }
	}
	在一个搜索请求中，你可以通过指定_source参数来获取指定的字段：
	GET /_search
	{
	    "query":   { "match_all": {}},
	    "_source": [ "title", "created" ]
	}
	响应中的_source中就只会有这两个字段，而不是完整的_source。
	在索引一个字段的值的时候，也可以选择存储原始的值来为之后的获取做准备。有Lucene背景的使用者会使用存储过的字段来选择返回哪些值。事实上，_source就是一个存储过的字段
	在Elasticsearch中，将特定的文档字段设置为可存储的通常是一个错误的优化。整个文档都已经被存储在_source字段里了，所以通过_source参数来获取想要的字段才是正确的。
	前文曾提及过_all字段，这个特殊的字段将其它字段中的值都索引为一个大的字符串。query_string查询子句如果未指定查询字段的话默认会去搜索_all字段。
	_all字段在新应用的探索阶段还是很有用的，这时你还不确定文档最终的结构是怎么样的。你可以构建任意的查询字串来找到你需要的文档。
	GET /_search
	{
	    "match": {
	        "_all": "john smith marketing"
	    }
	}
	等到应用慢慢成熟，查询也相对更加精确之后，你会发现使用_all字段的机会越来越少了。_all字段更多时候是一种粗略的搜索应用。通过对特定的字段进行查询，整个过程将会更加的便捷，有力，以及对文档关联度有更加细粒度的控制。
	关联度的计算算法中有一个非常重要的参数，那就是字段的长度：字段越短，匹配后的关联程度就越高。而这个差别在_all字段里是无法体现的。
	
