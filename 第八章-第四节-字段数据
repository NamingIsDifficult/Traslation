 	本章最终的主题是关于Elasticsearch内在的方向。这一节不会再展示一些新的技术，字段数据是一个我们重复提及的重要主题，也是你需要保持注意的东西。
 	当对一个字段做排序的时候，Elasticsearch需要读取每一个匹配查询的文档的相应的字段值。反向索引在搜索的时候表现很好，但是在字段排序的时候并不是一个好的结构。
 	搜索的时候，我们需要可以将短语映射到文档列表上去。
 	排序的时候，我们需要将一个文档映射到它的短语上去。换句话说，对反向索引再做反转。
 	为了使排序有效，Elasticsearch将所有的需要排序的字段值都装载到内存中。这些内容就是所谓的字段数据。
 	Elasticsearch不仅仅装载匹配查询的文档的值，它将索引中所有的文档的需要排序的字段值都装载进来，而且不区分文档类型。
 	这是因为在硬盘中做索引反转是很慢的。即使在这次请求中你只需要对一部分文档取值，那也不保证下一次请求不对其它的文档取值，所以一次性将所有的值都加载并保存在内存中还是有意义的。
 	字段数据在以下几个地方有用到：
 	对字段进行排序的时候
 	对一个字段做聚合
 	特定的过滤器，比如经纬度过滤器
 	引用了字段的脚本
 	显而易见的，这样的操作会消耗许多的内存，尤其是对于有许多个不同值得字符串集合类型的字段，比如一封电邮的主题。不过还好，可以通过水平扩展来解决内存缺少的问题，在集群中添加更多的节点就可以了。
 	这节的目的是为了叙述字段数据的定义，并且了解可能造成的内存危机。后续会告诉你怎么设置字段数据使用的内存大小，即限制其最大使用量，以及如何预加载字段数据来提高用户体验。
